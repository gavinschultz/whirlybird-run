<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.font_score = font_add_sprite(sFontScore, ord('0'), false, 0);
global.font_text = font_add_sprite(sFontText, ord('A'), false, 0);
display_set_gui_size(1024,768);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// score
score_string = PadZero(score, 6);
draw_set_colour(global.colour_cocoblue);
draw_set_font(global.font_score);
draw_set_halign(fa_left);
draw_text(display_get_gui_width() - 224,16,score_string);

// lives
frame = ((global.frame_count % 16) &gt; 8);
lives_sprite_y = (sprite_get_height(sHeli) / 2) + 20;
if (lives &gt; 1) 
    draw_sprite(sHeli, frame, (display_get_gui_width() / 2) - sprite_get_width(sHeli), lives_sprite_y);
if (lives &gt; 2)
    draw_sprite(sHeli, !frame, (display_get_gui_width() / 2), lives_sprite_y);
if (lives &gt; 3)
    draw_sprite(sHeli, frame, (display_get_gui_width() / 2) + sprite_get_width(sHeli), lives_sprite_y);

// Fuel
if (instance_exists(oHeli))
{
    draw_set_font(global.font_text);
    draw_set_halign(fa_left);
    draw_set_color(global.colour_cocored);
    draw_text_color(64, 16, "E", c_red, c_red, c_red, c_red, 1);
    draw_text(320, 16, "F");
    var fuel_gauge_width = 208 * (oHeli.fuel/100);
    draw_line_width_colour(100, 32, 100 + fuel_gauge_width, 32, 16, global.colour_cocored, global.colour_cocored);
}
    
// line at top
draw_line_width_colour(32, 64, display_get_gui_width() - 32, 64, 2, global.colour_cocoyellow, global.colour_cocoyellow);

with (oGame)
{
    if (state == STATE_GAMEOVER)
    {
        draw_set_font(global.font_text);
        draw_set_halign(fa_center);
        draw_set_colour(global.colour_cocored);
        draw_text(display_get_gui_width() / 2, display_get_gui_height() / 2 - 200, "WHIRLYBIRD");
        draw_text(display_get_gui_width() / 2, display_get_gui_height() / 2 - 200 + sprite_get_height(sFontText) + 16, "RUN");
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
